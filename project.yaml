specVersion: "1.0.0"

name: "avalanche-subql-starter"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-avalanche"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Avalanche SubQuery project"
repository: "https://github.com/subquery/avalanche-subql-starter"

schema:
  file: "./schema.graphql"

network:
  chainId: "mainnet"
  subnet: "C"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  # If using an OnFinality Endpoint, you should append the API key like so:
  # endpoint: "https://avalanche.api.onfinality.io?apikey=xxxxx-xxxxx-xxxxxx-xxxxxxxx" #using from .env and passing a flag in docker config
  # Note that we currently only support HTTP endpoints (not Websockets)
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: https://api.subquery.network/sq/subquery/avalanche-dictionary
dataSources:
  # - kind: avalanche/Runtime
  #   startBlock: 0
  #   options:
  #     address: ""
  #   mapping:
  #     file: "./dist/index.js"
  #     handlers:
  #       - handler: handleTransaction
  #         kind: avalanche/TransactionHandler

  - kind: avalanche/Runtime
    startBlock: 0
    options:
      abi: erc20
      #address: '0x60781C2586D68229fde47564546784ab3fACA982'
    assets:
      erc20:
        file: >-
          ./abis/erc20.json
    mapping:
      file: ./dist/index.js
      handlers:
        # - handler: handleTransaction
        #   kind: avalanche/TransactionHandler
        #   filter:
        #     function: deposit(uint256 amount)
        - handler: handleTransfer
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                Transfer(address indexed from, address indexed to, uint256 amount)
        - handler: handleApproval
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                Approval(address indexed owner,address indexed spender,uint256 value)
  - kind: avalanche/Runtime
    startBlock: 0
    options:
      abi: erc721
      #address: '0x60781C2586D68229fde47564546784ab3fACA982'
    assets:
      erc721:
        file: >-
          ./abis/erc721.json
    mapping:
      file: ./dist/index.js
      handlers:
        # - handler: handleTransaction
        #   kind: avalanche/TransactionHandler
        #   filter:
        #     function: deposit(uint256 amount)
        - handler: handle721Transfer
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                Transfer(address indexed from, address indexed to, uint256 amount)
        - handler: handle721Approval
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                Approval(address indexed,address indexed,uint256 indexed)
        - handler: handle721ApprovalForAll
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                ApprovalForAll(address indexed,address indexed,bool)
  - kind: avalanche/Runtime
    startBlock: 0
    options:
      abi: erc1155
      #address: '0x60781C2586D68229fde47564546784ab3fACA982'
    assets:
      erc1155:
        file: >-
          ./abis/erc1155.json
    mapping:
      file: ./dist/index.js
      handlers:
        # - handler: handleTransaction
        #   kind: avalanche/TransactionHandler
        #   filter:
        #     function: deposit(uint256 amount)
        - handler: handle1155TransferSingle
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                TransferSingle(address indexed,address indexed,address indexed,uint256,uint256)
        - handler: handle1155TransferBatch
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                TransferBatch(address indexed,address indexed,address indexed,uint256[],uint256[])
        - handler: handle1155ApprovalForAll
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                ApprovalForAll(address indexed ,address indexed,bool)
        - handler: handle1155URI
          kind: avalanche/LogHandler
          filter:
            topics:
              - >-
                URI(string,uint256 indexed)
